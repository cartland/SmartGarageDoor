name: Android CI

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
    paths:
      - 'AndroidGarage/**'
      - '.github/workflows/ci.yml'
  push:
    branches: [ "main", "internal", "release" ]
    paths:
      - 'AndroidGarage/**'
      - '.github/workflows/ci.yml'

jobs:
  test:
    name: Run Unit Tests & Formatting Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for release scripts
        working-directory: AndroidGarage
        run: chmod +x release/*.sh
      - name: Decrypt secrets
        working-directory: AndroidGarage
        run: ./release/decrypt-secrets.sh
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}
      - name: Grant execute permission for gradlew
        working-directory: AndroidGarage
        run: chmod +x gradlew
      - name: Run Spotless Check
        working-directory: AndroidGarage
        run: ./gradlew spotlessCheck
      - name: Run Unit Tests
        working-directory: AndroidGarage
        env:
          SERVER_CONFIG_KEY: ${{ secrets.SERVER_CONFIG_KEY }}
          GOOGLE_WEB_CLIENT_ID: ${{ secrets.GOOGLE_WEB_CLIENT_ID }}
        run: ./gradlew test -PSERVER_CONFIG_KEY="$SERVER_CONFIG_KEY" -PGOOGLE_WEB_CLIENT_ID="$GOOGLE_WEB_CLIENT_ID"
      - name: Clean secrets
        if: always()
        working-directory: AndroidGarage
        run: ./release/clean-secrets.sh
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: AndroidGarage/androidApp/build/reports/tests/
  build_debug:
    name: Build Debug APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for release scripts
        working-directory: AndroidGarage
        run: chmod +x release/*.sh
      - name: Decrypt secrets
        working-directory: AndroidGarage
        run: ./release/decrypt-secrets.sh
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}
      - name: Grant execute permission for gradlew
        working-directory: AndroidGarage
        run: chmod +x gradlew
      - name: Build Debug
        working-directory: AndroidGarage
        env:
          SERVER_CONFIG_KEY: ${{ secrets.SERVER_CONFIG_KEY }}
          GOOGLE_WEB_CLIENT_ID: ${{ secrets.GOOGLE_WEB_CLIENT_ID }}
        run: ./gradlew :androidApp:assembleDebug -PSERVER_CONFIG_KEY="$SERVER_CONFIG_KEY" -PGOOGLE_WEB_CLIENT_ID="$GOOGLE_WEB_CLIENT_ID"
      - name: Clean secrets
        if: always()
        working-directory: AndroidGarage
        run: ./release/clean-secrets.sh
      - name: Upload debug APK
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: AndroidGarage/androidApp/build/outputs/apk/debug/
  build_release:
    name: Build Release AAB
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/internal' || github.ref == 'refs/heads/release')
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for release scripts
        working-directory: AndroidGarage
        run: chmod +x release/*.sh
      - name: Decrypt secrets
        working-directory: AndroidGarage
        run: ./release/decrypt-secrets.sh
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}
      - name: Grant execute permission for gradlew
        working-directory: AndroidGarage
        run: chmod +x gradlew
      - name: Build Release AAB
        working-directory: AndroidGarage
        env:
          SERVER_CONFIG_KEY: ${{ secrets.SERVER_CONFIG_KEY }}
          GOOGLE_WEB_CLIENT_ID: ${{ secrets.GOOGLE_WEB_CLIENT_ID }}
          GARAGE_RELEASE_KEYSTORE_PWD: ${{ secrets.GARAGE_RELEASE_KEYSTORE_PWD }}
          GARAGE_RELEASE_KEY_PWD: ${{ secrets.GARAGE_RELEASE_KEY_PWD }}
        run: ./gradlew :androidApp:bundleRelease -PSERVER_CONFIG_KEY="$SERVER_CONFIG_KEY" -PGOOGLE_WEB_CLIENT_ID="$GOOGLE_WEB_CLIENT_ID" -PGARAGE_RELEASE_KEYSTORE_PWD="$GARAGE_RELEASE_KEYSTORE_PWD" -PGARAGE_RELEASE_KEY_PWD="$GARAGE_RELEASE_KEY_PWD"
      - name: Clean secrets
        if: always()
        working-directory: AndroidGarage
        run: ./release/clean-secrets.sh
      - name: Upload release AAB
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: AndroidGarage/androidApp/build/outputs/bundle/release/
  deploy_internal:
    name: Deploy to Internal Track
    runs-on: ubuntu-latest
    needs: build_release
    if: github.event_name == 'push' && github.ref == 'refs/heads/internal'
    steps:
      - uses: actions/checkout@v4
      - name: Download release AAB
        uses: actions/download-artifact@v4
        with:
          name: release-aab
          path: release-aab
      - name: Deploy to Google Play
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.chriscartland.garage
          releaseFiles: release-aab/*.aab
          track: internal
          whatsNewDirectory: AndroidGarage/distribution/whatsnew
